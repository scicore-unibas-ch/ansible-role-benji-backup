---

- name: Create all the required directories
  ansible.builtin.file:
    path: "{{ directory }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  loop: "{{ benji_backup_dirs }}"
  loop_control:
    loop_var: directory
  tags: benji-dirs

- name: Create the directory for postgres data
  ansible.builtin.file:
    path: "{{ benji_backup_postgres_data_dir }}"
    state: directory
    mode: 0750
    owner: 999
    group: 999
  tags: benji-dirs

# - name: Create logfile
#   ansible.builtin.file:
#     path: "{{ benji_base_path }}/logs/benji.log"
#     state: touch
#     mode: 0644
#     owner: root
#     group: root
#   tags: benji-logs

# - name: Setup daily logrotate
#   ansible.builtin.template:
#     src: benji-logrotate.j2
#     dest: "/etc/logrotate.d/benji"
#     owner: root
#     group: root
#     mode: 0644
#   tags: benji-logs

# - name: Create postgresql backup script
#   ansible.builtin.template:
#     src: pgsql_dump.sh.j2
#     dest: "{{ benji_postgresql_backup_script }}"
#     owner: root
#     group: root
#     mode: 0755
#   tags: pgsql-scripts

# - name: Create postgresql backup cron entry
#   ansible.builtin.cron:
#     name: "postgresql dump"
#     minute: "{{ benji_postgresql_schedule.minute }}"
#     hour: "{{ benji_postgresql_schedule.hour }}"
#     user: root
#     job: "/opt/benji/scripts/pgsql_dump.sh"
#     cron_file: pgsql_backup
#   tags: pgsql-scripts

- name: Deploy ceph.sh script from benji repo
  ansible.builtin.copy:
    src: "ceph.sh"
    dest: "{{ benji_backup_base_path }}/config/ceph.sh"
    owner: root
    group: root
    mode: 0755

- name: Deploy benji wrappers
  ansible.builtin.template:
    src: "wrappers/{{ wrapper.name }}.j2"
    dest: "{{ wrapper.dest }}"
    owner: root
    group: root
    mode: 0755
  loop: "{{ benji_backup_wrappers }}"
  loop_control:
    loop_var: wrapper

- name: Deploy helper script backup.sh
  ansible.builtin.template:
    src: backup.sh.j2
    dest: "{{ benji_backup_base_path }}/config/backup.sh"
    owner: root
    group: root
    mode: 0755

- name: Deploy master configuration file
  ansible.builtin.template:
    src: benji.yaml.j2
    dest: "{{ benji_backup_base_path }}/config/benji.yaml"
    owner: root
    group: root
    mode: 0644
  tags: benji-conf

- name: Deploy docker-compose
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ benji_backup_base_path }}/config/docker-compose.yml"
    owner: root
    group: root
    mode: 0644
  tags: benji-conf

- name: Boot the containers
  community.docker.docker_compose:
    project_src: "{{ benji_backup_base_path }}/config"
  vars:
    ansible_python_interpreter: "{{ local_venv_ansible_docker_compose }}/bin/python"
  register: _containers_boot

- name: Wait 10secs to let postgres boot if this is the first time it boots
  ansible.builtin.pause:
    seconds: 10
  when: _containers_boot.changed
  tags:
    - skip_ansible_lint

- name: Init benji database
  ansible.builtin.shell:
    cmd: "docker exec {{ benji_backup_container_name }} benji database-init && touch {{ benji_backup_postgres_data_dir }}/../benji_db_initialized"
    creates: "{{ benji_backup_postgres_data_dir }}/../benji_db_initialized"
  ignore_errors: true
