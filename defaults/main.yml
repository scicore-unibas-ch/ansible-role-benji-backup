---

benji_backup_add_ceph_apt_repos: true

# What ceph apt repos to add. Check ceph release names in
# https://docs.ceph.com/en/latest/releases/#ceph-releases-index
benji_backups_ceph_apt_repos_version: reef

benji_backup_v1_ceph_port: "6789"
benji_backup_v2_ceph_port: "3300"

benji_backup_rbd_ceph_monitors:
  - "172.16.5.14"
  - "172.16.5.15"
  - "172.16.5.16"

## RBD client to access your ceph cluster
benji_backup_cephrbd_client:
  name: "benji"
  fsid: "xxxxxxxxxxxxxxxxxxxxxxxxx"
  key: "yyyyyyyyyyyyyyyyyyyyyyyyy"

# Here we deploy all the config files and logs
benji_backup_base_path: "/opt/benji"

benji_backup_dirs:
  - "{{ benji_backup_base_path }}"
  - "{{ benji_backup_base_path }}/config"
  - "{{ benji_backup_base_path }}/logs"
  - "{{ benji_backup_base_path }}/scripts"
  - "{{ benji_backup_base_path }}/postgresql"
  - "{{ benji_backup_backups_destination_path }}/pgsql"

benji_backup_postgres_data_dir: "{{ benji_backup_base_path }}/postgresql/data"

# these are some wrappers we deploy in the host to execute
# benji commands inside the containers
benji_backup_wrappers:
  - { name: "benji-list", dest: "/usr/local/bin/benji-list" }
  - { name: "benji-restore", dest: "/usr/local/bin/benji-restore" }
  - { name: "benji-backup", dest: "/usr/local/bin/benji-backup" }
  - { name: "benji-usage", dest: "/usr/local/bin/benji-usage" }
  # this one is copied in a dedicated task
  # - { name: "backup.sh", dest: "{{ benji_backup_base_path }}/config/backup.sh" }

benji_backup_container_base_image: ghcr.io/elemental-lf/benji
benji_backup_container_tag: 0.17.0
benji_backup_container_name: benji-backup
benji_backup_container_network_mtu: 8950

benji_backup_docker_compose_project_name: benji-backup
benji_backup_postgresql_container_name: "{{ benji_backup_docker_compose_project_name }}-postgres"
## PGSQL configuration
benji_backup_postgresql_container_image: postgres
benji_backup_postgresql_container_tag: 15
benji_backup_postgresql_user: "benji"
benji_backup_postgresql_db: "benji-backup"
benji_backup_postgresql_password: "asd23w45234asddf235fas"

benji_backup_destination_name: "backups-destination"
# Here we store all our backups
benji_backup_backups_destination_path: "/backups/benji"

## PGSQL backup command, script and schedule
benji_backup_postgresql_gz: "{{ benji_backup_backups_destination_path }}/pgsql/{{ benji_backup_postgresql_db }}-$(date +%Y-%m-%d-%H-%M-%S).sql.gz"
benji_backup_postgresql_backup_script: "{{ benji_backup_base_path }}/scripts/pgsql_dump.sh"
benji_backup_postgresql_backup_command: "docker exec {{ benji_backup_postgresql_container_name }} pg_dump -U {{ benji_backup_postgresql_user }} {{ benji_backup_postgresql_db }} | gzip -c  > {{ benji_backup_postgresql_gz }}"
benji_backup_postgresql_schedule:
  minute: 0
  hour: 1

benji_backup_create_venv_for_ansible: true
benji_backup_venv_ansible_docker_compose: "{{ benji_backup_base_path }}/venv_ansible"
# this points to a python venv with the docker-compose library installed
# so it can be used with the ansible module community.docker.docker_compose
benji_backup_python_interpreter_docker_compose: "{{ benji_backup_venv_ansible_docker_compose }}/bin/python3"
